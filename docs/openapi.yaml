openapi: 3.0.3
info:
  title: Loft Al-Dughairi API
  description: |
    منصة لوفت الدغيري للحمام الزاجل - API Documentation
    
    ## نظرة عامة
    منصة متكاملة لبيع وشراء الحمام الزاجل والمستلزمات عبر المزادات والمبيعات المباشرة
    
    ## المصادقة
    تستخدم المنصة JWT tokens للمصادقة. يجب تضمين التوكن في header:
    ```
    Authorization: Bearer <token>
    ```
    
    ## الأدوار
    - `admin`: مدير النظام - صلاحيات كاملة
    - `verified`: مستخدم مؤكد - يمكنه المزايدة والشراء
    - `registered`: مستخدم مسجل - يحتاج تأكيد البريد
    
    ## معدلات الطلبات
    - 60 طلب في الدقيقة لكل مستخدم
    - 100 طلب في الدقيقة للـ admin
    
  version: 1.0.0
  contact:
    email: support@loft-dughairi.com
  license:
    name: Proprietary
    
servers:
  - url: https://api.loft-dughairi.com
    description: Production Server
  - url: http://localhost:4000
    description: Development Server
    
tags:
  - name: Authentication
    description: المصادقة وإدارة الحساب
  - name: Users
    description: إدارة المستخدمين
  - name: Products
    description: المنتجات (حمام ومستلزمات)
  - name: Auctions
    description: المزادات والمزايدات
  - name: Orders
    description: الطلبات والمشتريات
  - name: Payments
    description: المدفوعات والفواتير
  - name: Shipping
    description: الشحن والتوصيل
  - name: Notifications
    description: الإشعارات
  - name: Admin
    description: لوحة الإدارة

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          example: "AUTH_INVALID_CREDENTIALS"
        message:
          type: string
          example: "Invalid email or password"
        details:
          type: object
          
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "أحمد الدغيري"
        email:
          type: string
          format: email
          example: "ahmad@example.com"
        phone:
          type: string
          example: "+966501234567"
        role:
          type: string
          enum: [admin, verified, registered]
        state:
          type: string
          enum: [active, suspended, banned]
        city_id:
          type: integer
        email_verified_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          
    Product:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          enum: [pigeon, supply]
        title:
          type: string
          example: "حمام زاجل أصيل"
        slug:
          type: string
          example: "pigeon-001"
        description:
          type: string
        price_net:
          type: number
          format: float
          example: 500.00
        status:
          type: string
          enum: [available, sold, reserved]
        media:
          type: array
          items:
            $ref: '#/components/schemas/Media'
            
    Pigeon:
      allOf:
        - $ref: '#/components/schemas/Product'
        - type: object
          properties:
            ring_number:
              type: string
              example: "SA-2024-0001"
            sex:
              type: string
              enum: [male, female, unknown]
            birth_date:
              type: string
              format: date
            lineage:
              type: string
              
    Supply:
      allOf:
        - $ref: '#/components/schemas/Product'
        - type: object
          properties:
            sku:
              type: string
              example: "SUP-001"
            stock_qty:
              type: integer
              example: 50
            low_stock_threshold:
              type: integer
              example: 10
              
    Auction:
      type: object
      properties:
        id:
          type: integer
        product_id:
          type: integer
        start_price:
          type: number
          format: float
        current_price:
          type: number
          format: float
        bid_step:
          type: number
          format: float
        reserve_price:
          type: number
          format: float
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        status:
          type: string
          enum: [scheduled, live, ended, cancelled]
        winner_user_id:
          type: integer
        bids_count:
          type: integer
        top_bidder:
          $ref: '#/components/schemas/User'
          
    Bid:
      type: object
      properties:
        id:
          type: integer
        auction_id:
          type: integer
        user_id:
          type: integer
        amount:
          type: number
          format: float
        bidder_name_snapshot:
          type: string
        created_at:
          type: string
          format: date-time
          
    Order:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        status:
          type: string
          enum: [pending, paid, processing, shipped, delivered, cancelled, refunded]
        subtotal_gross:
          type: number
          format: float
        vat_amount:
          type: number
          format: float
        shipping_fee_gross:
          type: number
          format: float
        grand_total:
          type: number
          format: float
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
            
    OrderItem:
      type: object
      properties:
        id:
          type: integer
        order_id:
          type: integer
        product_id:
          type: integer
        product_type:
          type: string
        product_title:
          type: string
        product_slug:
          type: string
        quantity:
          type: integer
        unit_price_gross:
          type: number
          format: float
        subtotal_gross:
          type: number
          format: float
          
    Invoice:
      type: object
      properties:
        id:
          type: integer
        order_id:
          type: integer
        number:
          type: string
          example: "INV-2024-0001"
        status:
          type: string
          enum: [pending, paid, failed, refunded, cancelled]
        total_amount:
          type: number
          format: float
        paid_amount:
          type: number
          format: float
        payment_method:
          type: string
        payment_session_id:
          type: string
          
    Shipment:
      type: object
      properties:
        id:
          type: integer
        order_id:
          type: integer
        tracking_number:
          type: string
        carrier:
          type: string
        status:
          type: string
          enum: [pending, processing, shipped, in_transit, delivered, returned]
        shipped_at:
          type: string
          format: date-time
        delivered_at:
          type: string
          format: date-time
          
    Media:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
          format: uri
        type:
          type: string
          enum: [image, video]
        position:
          type: integer
          
paths:
  # ===== Authentication =====
  /auth/register:
    post:
      tags: [Authentication]
      summary: تسجيل مستخدم جديد
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password, phone, city_id]
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                phone:
                  type: string
                city_id:
                  type: integer
      responses:
        201:
          description: تم التسجيل بنجاح
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string
                    
  /auth/login:
    post:
      tags: [Authentication]
      summary: تسجيل الدخول
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        200:
          description: تم تسجيل الدخول
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string
                    
  /auth/verify-email:
    post:
      tags: [Authentication]
      summary: تأكيد البريد الإلكتروني
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [token]
              properties:
                token:
                  type: string
      responses:
        200:
          description: تم تأكيد البريد
          
  /auth/refresh:
    post:
      tags: [Authentication]
      summary: تجديد التوكن
      security:
        - bearerAuth: []
      responses:
        200:
          description: تم تجديد التوكن
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    
  # ===== Products =====
  /products:
    get:
      tags: [Products]
      summary: قائمة المنتجات
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum: [pigeon, supply]
        - name: status
          in: query
          schema:
            type: string
            enum: [available, sold, reserved]
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: قائمة المنتجات
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  total:
                    type: integer
                  page:
                    type: integer
                  pages:
                    type: integer
                    
  /products/{slug}:
    get:
      tags: [Products]
      summary: تفاصيل منتج
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: تفاصيل المنتج
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Pigeon'
                  - $ref: '#/components/schemas/Supply'
                  
  # ===== Auctions =====
  /auctions:
    get:
      tags: [Auctions]
      summary: قائمة المزادات
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [scheduled, live, ended]
        - name: page
          in: query
          schema:
            type: integer
      responses:
        200:
          description: قائمة المزادات
          content:
            application/json:
              schema:
                type: object
                properties:
                  auctions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Auction'
                      
  /auctions/{id}:
    get:
      tags: [Auctions]
      summary: تفاصيل مزاد
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: تفاصيل المزاد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auction'
                
  /auctions/{id}/bid:
    post:
      tags: [Auctions]
      summary: المزايدة
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [amount]
              properties:
                amount:
                  type: number
                  format: float
      responses:
        201:
          description: تمت المزايدة
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bid'
                
  /auctions/{id}/bids:
    get:
      tags: [Auctions]
      summary: سجل المزايدات
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: سجل المزايدات
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bid'
                  
  # ===== Orders =====
  /orders/checkout:
    post:
      tags: [Orders]
      summary: إنشاء طلب جديد
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [items, shipping_address]
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: integer
                      quantity:
                        type: integer
                shipping_address:
                  type: object
                  properties:
                    street:
                      type: string
                    city_id:
                      type: integer
                    phone:
                      type: string
      responses:
        201:
          description: تم إنشاء الطلب
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    $ref: '#/components/schemas/Order'
                  invoice:
                    $ref: '#/components/schemas/Invoice'
                    
  /orders:
    get:
      tags: [Orders]
      summary: طلباتي
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
      responses:
        200:
          description: قائمة الطلبات
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                      
  /orders/{id}:
    get:
      tags: [Orders]
      summary: تفاصيل طلب
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: تفاصيل الطلب
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
                
  # ===== Payments =====
  /payments/create-session:
    post:
      tags: [Payments]
      summary: إنشاء جلسة دفع
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [invoice_id]
              properties:
                invoice_id:
                  type: integer
                payment_method:
                  type: string
                  enum: [card, bank_transfer, apple_pay]
      responses:
        200:
          description: جلسة الدفع
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  payment_url:
                    type: string
                    format: uri
                    
  /payments/webhook:
    post:
      tags: [Payments]
      summary: Webhook للمدفوعات
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: تم استلام الإشعار
          
  /payments/refund:
    post:
      tags: [Payments]
      summary: طلب استرداد
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [invoice_id, reason]
              properties:
                invoice_id:
                  type: integer
                reason:
                  type: string
                amount:
                  type: number
                  format: float
      responses:
        200:
          description: تم طلب الاسترداد
          
  # ===== Shipping =====
  /shipping/track/{tracking_number}:
    get:
      tags: [Shipping]
      summary: تتبع الشحنة
      parameters:
        - name: tracking_number
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: معلومات الشحنة
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
                
  # ===== Notifications =====
  /notifications:
    get:
      tags: [Notifications]
      summary: إشعاراتي
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [unread, read]
        - name: page
          in: query
          schema:
            type: integer
      responses:
        200:
          description: قائمة الإشعارات
          
  /notifications/{id}/read:
    post:
      tags: [Notifications]
      summary: تحديد كمقروء
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: تم التحديد كمقروء
          
  # ===== Admin =====
  /admin/dashboard:
    get:
      tags: [Admin]
      summary: إحصائيات لوحة التحكم
      security:
        - bearerAuth: []
      responses:
        200:
          description: الإحصائيات
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_users:
                    type: integer
                  total_products:
                    type: integer
                  total_auctions:
                    type: integer
                  total_orders:
                    type: integer
                  revenue_today:
                    type: number
                    format: float
                  revenue_month:
                    type: number
                    format: float
                    
  /admin/settings:
    get:
      tags: [Admin]
      summary: إعدادات النظام
      security:
        - bearerAuth: []
      responses:
        200:
          description: الإعدادات
          
    patch:
      tags: [Admin]
      summary: تحديث الإعدادات
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
      responses:
        200:
          description: تم التحديث
          
  /admin/users:
    get:
      tags: [Admin]
      summary: إدارة المستخدمين
      security:
        - bearerAuth: []
      parameters:
        - name: role
          in: query
          schema:
            type: string
        - name: state
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
      responses:
        200:
          description: قائمة المستخدمين
          
  /admin/users/{id}/suspend:
    post:
      tags: [Admin]
      summary: تعليق مستخدم
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [reason]
              properties:
                reason:
                  type: string
                duration_days:
                  type: integer
      responses:
        200:
          description: تم التعليق
          
  /admin/auctions/{id}/cancel:
    post:
      tags: [Admin]
      summary: إلغاء مزاد
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [reason]
              properties:
                reason:
                  type: string
      responses:
        200:
          description: تم الإلغاء
